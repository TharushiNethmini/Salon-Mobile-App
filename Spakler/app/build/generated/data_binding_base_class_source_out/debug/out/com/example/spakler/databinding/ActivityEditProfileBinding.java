// Generated by view binder compiler. Do not edit!
package com.example.spakler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spakler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backbtn;

  @NonNull
  public final TextView create;

  @NonNull
  public final TextView update;

  @NonNull
  public final EditText userContact;

  @NonNull
  public final EditText userEmail;

  @NonNull
  public final EditText userName1;

  @NonNull
  public final EditText userPassword;

  @NonNull
  public final TextView username;

  private ActivityEditProfileBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backbtn,
      @NonNull TextView create, @NonNull TextView update, @NonNull EditText userContact,
      @NonNull EditText userEmail, @NonNull EditText userName1, @NonNull EditText userPassword,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.backbtn = backbtn;
    this.create = create;
    this.update = update;
    this.userContact = userContact;
    this.userEmail = userEmail;
    this.userName1 = userName1;
    this.userPassword = userPassword;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbtn;
      ImageView backbtn = ViewBindings.findChildViewById(rootView, id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.create;
      TextView create = ViewBindings.findChildViewById(rootView, id);
      if (create == null) {
        break missingId;
      }

      id = R.id.update;
      TextView update = ViewBindings.findChildViewById(rootView, id);
      if (update == null) {
        break missingId;
      }

      id = R.id.userContact;
      EditText userContact = ViewBindings.findChildViewById(rootView, id);
      if (userContact == null) {
        break missingId;
      }

      id = R.id.userEmail;
      EditText userEmail = ViewBindings.findChildViewById(rootView, id);
      if (userEmail == null) {
        break missingId;
      }

      id = R.id.userName1;
      EditText userName1 = ViewBindings.findChildViewById(rootView, id);
      if (userName1 == null) {
        break missingId;
      }

      id = R.id.userPassword;
      EditText userPassword = ViewBindings.findChildViewById(rootView, id);
      if (userPassword == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityEditProfileBinding((ConstraintLayout) rootView, backbtn, create, update,
          userContact, userEmail, userName1, userPassword, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
