// Generated by view binder compiler. Do not edit!
package com.example.spakler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spakler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogcontentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText uname;

  @NonNull
  public final Button usubmit;

  @NonNull
  public final EditText vc1;

  @NonNull
  public final EditText vc2;

  @NonNull
  public final EditText vc3;

  @NonNull
  public final EditText vc4;

  private DialogcontentBinding(@NonNull LinearLayout rootView, @NonNull EditText uname,
      @NonNull Button usubmit, @NonNull EditText vc1, @NonNull EditText vc2, @NonNull EditText vc3,
      @NonNull EditText vc4) {
    this.rootView = rootView;
    this.uname = uname;
    this.usubmit = usubmit;
    this.vc1 = vc1;
    this.vc2 = vc2;
    this.vc3 = vc3;
    this.vc4 = vc4;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogcontentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogcontentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialogcontent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogcontentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.uname;
      EditText uname = ViewBindings.findChildViewById(rootView, id);
      if (uname == null) {
        break missingId;
      }

      id = R.id.usubmit;
      Button usubmit = ViewBindings.findChildViewById(rootView, id);
      if (usubmit == null) {
        break missingId;
      }

      id = R.id.vc1;
      EditText vc1 = ViewBindings.findChildViewById(rootView, id);
      if (vc1 == null) {
        break missingId;
      }

      id = R.id.vc2;
      EditText vc2 = ViewBindings.findChildViewById(rootView, id);
      if (vc2 == null) {
        break missingId;
      }

      id = R.id.vc3;
      EditText vc3 = ViewBindings.findChildViewById(rootView, id);
      if (vc3 == null) {
        break missingId;
      }

      id = R.id.vc4;
      EditText vc4 = ViewBindings.findChildViewById(rootView, id);
      if (vc4 == null) {
        break missingId;
      }

      return new DialogcontentBinding((LinearLayout) rootView, uname, usubmit, vc1, vc2, vc3, vc4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
